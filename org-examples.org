* Export
** New line
#+BEGIN_SRC org
    This long line starts here \\
    and continues here.
#+END_SRC
** Inline export snippet
#+BEGIN_SRC org
  @@html:<br>@@
  @@latex:\newpage@@ 
#+END_SRC
** ICS
*** Programmatically
#+BEGIN_SRC emacs-lisp
  (defun z/export-to-ics ()
  (interactive)
  (with-current-buffer (find-file-noselect "meetings.org")
  (rename-file (org-icalendar-export-to-ics)
  "/home/zeltak/org/files/export/kcal.ics")
  (message "exported to ics")))
#+END_SRC
** ODT
*** Change verse style
1. Export a document to ODT with the ugly verse environment
2. Right-click on a verse and choose 'Edit Paragraph Style' from the menu
3. Change any other styles (e.g. headings) as you like
4. Save the modified document in a convenient place (as ott)
5. Use it as an Org ODT styles file as described in the manual.
*** Force a page break
Change ~org-odt-styles-dir~ to point to a ~styles.xml~ supporting the ~PageBreak~ style:
#+BEGIN_EXAMPLE
<style:style style:name="PageBreak" style:family="paragraph"
                       style:parent-style-name="Text_20_body">
            <style:paragraph-properties fo:break-before="page"/>
          </style:style>
#+END_EXAMPLE
Add:
#+BEGIN_SRC org
  ,#+ODT: <text:p text:style-name="PageBreak"/>
#+END_SRC
Reference: http://orgmode.org/manual/Creating-one_002doff-styles.html
** MathJax
*** Control appearance
#+BEGIN_SRC org
  ,#+HTML_MATHJAX: align: left etc...
#+END_SRC
or via CSS
#+BEGIN_EXAMPLE
.MathJax_Display {
    color: #080;
    margin: 0;
}
#+END_EXAMPLE
* Babel
** Inline raw results
#+BEGIN_SRC org
  Date: src_perl[:results output raw]{print 2016;}
#+END_SRC

or with a macro
#+BEGIN_SRC org
  ,#+MACRO: gendate src_perl[:results output raw]{print ($1*5);}
  ,* Day {{{gendate(6)}}}
  ...
  ,* Day {{{gendate(10)}}}
#+END_SRC
** Run babel tangle on point
#+BEGIN_SRC emacs-lisp
    (defun org-babel-tangle-block()
      (interactive)
      (let ((current-prefix-arg '(4)))
         (call-interactively 'org-babel-tangle)))

    (eval-after-load "org"
      '(progn
         (define-key org-mode-map (kbd "C-c b") 'org-babel-tangle-block)))
#+END_SRC

** Run code block when loading org-mode document
#+BEGIN_SRC org
  #  -*- find-file-hook: org-babel-execute-buffer -*-
  ,#+BEGIN_SRC emacs-lisp
  (defun handy-stuff(arg)
   (message arg))
  ,#+END_SRC

  [[elisp:(handy-stuff "foo")][foo]]
  [[elisp:(handy-stuff "bar")][bar]]
#+END_SRC

** Change permissions on tangled file
http://orgmode.org/manual/tangle_002dmode.html#tangle_002dmode

** Add caption to babel-generated figures
#+BEGIN_SRC ditaa :file figs/-mininet-ovsk.png :cache yes
   /----+ /----+ /----+ /----+
   |host| |host| |host| |host|       Containers
   +-+--/ +-+--/ +--+-/ +--+-/
     |      |       |      |
  ---------------------------------------------
     |      |       |      |
   +-+------+-------+------+-+
   |      Open VSwitch       |      Host kernel
   +-----+-------------+---=-+
         |             |
  +------+-----+ +-----+------+
  | controller | | controller |  Host userspace
  +------------+ +------------+
#+END_SRC

#+ATTR_LATEX: :width "" :options [scale=0.75]
#+NAME: [[label:fig:mininet-arch]]Mininet with OpenVSwitch architecture
#+RESULTS[1d367d39f18523f4eb247cb13aabd6c6f633fbdf]: [[file:figs/-mininet-ovsk.png]]

** Conditional file extensions of plots

Run this block or put the code in your init file:

#+BEGIN_SRC emacs-lisp
  (defun org-pdf-if-latex ()
    (if (eq (org-bound-and-true-p
        org-export-current-backend)
       'latex) "pdf" "png"))
#+END_SRC


This generates pdf for latex and png for all other backends (or no backend at all).

#+name: pdf-or-png
#+BEGIN_SRC R :exports both :results graphics :file-ext (org-pdf-if-latex)
plot(rnorm(50))
#+END_SRC

See (info "(org) file-ext") 
* General
** Start up files w/ 2 levels of heading
Put at the end of the file:
#+BEGIN_EXAMPLE

  : Local Variables:      :
  : coding:utf-8          :
  : eval:(org-shifttab 2) :
  : End:                  :

#+END_EXAMPLE
** Change default apps
#+BEGIN_SRC emacs-lisp
(add-hook 'org-mode-hook
           '(lambda ()
            (delete '("\\.pdf\\'" . default) org-file-apps)
	    (add-to-list 'org-file-apps '("\\.pdf\\'" . "xpdf %s"))))
#+END_SRC
** Clone subtree w/ new id
#+BEGIN_SRC emacs-lisp
(defun clone-subtree ()
  "Clone the current subtree and change the id."
  (interactive)

  (when (not (looking-at "^\\*"))
    (re-search-backward "^\\*"))

  (org-copy-subtree)
  (goto-char (org-element-property :end (org-element-context)))
  
  (org-paste-subtree)
  (org-id-get-create t))
#+END_SRC
** Table in math mode
#+BEGIN_SRC org
    #+ATTR_LATEX: :mode math :environment array :align c|c :math-prefix A=\left[ :math-suffix \right],
    | a         | b |
    |-----------+---|
    | \hline{}c | d |
#+END_SRC

exports to

#+BEGIN_LaTeX
    \[
    A=\left[\begin{array}{cc}
     a & b \\
     \hline{}c & d \\
    \end{array}\right],
    \]
#+END_LaTeX
** CSS
http://gongzhitaao.org/orgcss/

* By language
** C
#+BEGIN_SRC org
  ,#+BEGIN_SRC C :includes '(<math.h> <stdio.h>) :flags -lm
  int i=9;
  printf("%d\n",(int)sqrt(i));
  ,#+END_SRC
#+END_SRC
** Elisp
#+BEGIN_SRC org
  ,#+name: my-input
  | el | value      | expected |
  |----+------------+----------|
  | 5  | '(5 5 5 5) | 4        |
  | ...etc...                  |

  ,#+BEGIN_SRC elisp :var input=my-input :results table
  ;; Code that does the calculations in your tblfm line
  ;; `input' is a variable holding your input table
  ,#+END_SRC
#+END_SRC
** Python
#+BEGIN_SRC org
  ,#+NAME: checkfilename
  ,#+HEADER: :var fileout="test--checkfilename.pdf"
  ,#+BEGIN_SRC+BEGIN_SRC python :session :results file
  import numpy as np
  import matplotlib.pyplot as plt
  fig, ax = plt.subplots(1, 1)
  X = np.linspace(1, 10)
  Y = np.sin(X)
  ax.plot(X, Y)
  fig.savefig(fileout)
  plt.close(fig)
  fileout
  ,#+END_SRC
#+END_SRC
** Maxima
#+BEGIN_SRC org
  ,#+name: 3d-maxima
  ,#+header: :file maxima-3d.png
  ,#+header: :exports results
  ,#+header: :results graphics
  ,#+BEGIN_SRC maxima 
    programmode: false;
    plot3d(atan(-x^2+y^3/4),[x,-4,4],[y,-4,4],[grid,50,50],[gnuplot_pm3d,true]);
  ,#+END_SRC
#+END_SRC

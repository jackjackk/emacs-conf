* Text editing (~init-text.el~)
:PROPERTIES:
:tangle:   init-text.el
:END:

Use 4 spaces for tab indentation.
#+BEGIN_SRC elisp
(setq default-tab-width 4)
(setq-default indent-tabs-mode nil)
#+END_SRC

Overwrite selected region when typing after selection.
#+BEGIN_SRC elisp
(pending-delete-mode 1)
#+END_SRC

Set fill-column width to 70 characters.
#+BEGIN_SRC elisp
(setq-default fill-column 70)
#+END_SRC

Provide a ~cleanup-buffer~ function (untabify + indent + remove trailing whitespaces).
#+BEGIN_SRC elisp
(defun untabify-buffer ()
  (interactive)
  (untabify (point-min) (point-max)))
(defun indent-buffer ()
  (interactive)
  (indent-region (point-min) (point-max)))
(defun cleanup-buffer ()
  "Perform a bunch of operations on the whitespace content of a buffer."
  (interactive)
  (indent-buffer)
  (untabify-buffer)
  (delete-trailing-whitespace))
#+END_SRC

Provide convenient hooks for programming modes (e.g. for GAMS and python) to automatically untabify and set utf-8-unix coding system before saving.
#+BEGIN_SRC elisp
(defun progmodes-hooks ()
  "Hooks for programming modes"
  (yas/minor-mode-on)
  (add-hook 'before-save-hook 'progmodes-write-hooks))
(defun progmodes-write-hooks ()
  "Hooks which run on file write for programming modes"
  (prog1 nil
    (set-buffer-file-coding-system 'utf-8-unix)
    (untabify-buffer)))
#+END_SRC

Enable disabled commands.
#+BEGIN_SRC elisp
(put 'erase-buffer 'disabled nil)
#+END_SRC

** Key-bindings
| ~?~                | Copy whole buffer.            |
| ~C-S-z~            | Clone previous line.          |
| ~C-x n n, C-x n w~ | Restrict editing to region.   |
| ~C-x C-u~          | Convert region to upper case. |
| ~C-x C-l~          | Convert region to lower case  |

#+BEGIN_SRC elisp
(defun copy-whole-buffer ()
  "Copy entire buffer to clipboard"
  (interactive)
  (clipboard-kill-ring-save (point-min) (point-max)))
;(global-set-key (kbd "C-x C-a")  'copy-whole-buffer)

(fset 'clone-previous-line
   [up ?\C-a ?\C-k ?\C-y down ?\C-a ?\C-y ?\C-a])
(global-set-key (kbd "C-S-z")  'clone-previous-line)

(put 'narrow-to-region 'disabled nil)
(put 'upcase-region 'disabled nil)
(put 'downcase-region 'disabled nil)
#+END_SRC


* The modules caller (~lisp/init-packages.el~)
:PROPERTIES:
:header-args: :tangle   lisp/init-packages.el
:END:

Set repositories from which to fetch Emacs packages.
#+BEGIN_SRC emacs-lisp
  (setq package-archives '(("gnu" . "http://elpa.gnu.org/packages/")
                           ("melpa" . "http://melpa.milkbox.net/packages/")
                           ("org"         . "http://orgmode.org/elpa/")))
#+END_SRC

Initialize the package manager.
#+BEGIN_SRC emacs-lisp
(package-initialize)
#+END_SRC

Refresh the list of packages if there is no list yet, or if one package in ~package-list~ has to be installed.
#+BEGIN_SRC emacs-lisp
(unless package-archive-contents
  (package-refresh-contents))

(require 'cl)
(defun package-list-installed-p ()
  (loop for package in package-list
        when (not (package-installed-p package)) do (return nil)
        finally (return t)))

(unless (package-list-installed-p)
  (message "%s" "Emacs is now refreshing its package database...")
  (package-refresh-contents)
  (message "%s" " done."))
#+END_SRC

Load package configuration file ~lisp/init-mod-XXX.el~ for each package ~XXX~ in ~package-list~, installing those that are missing first.
#+BEGIN_SRC emacs-lisp
(dolist (package package-list)
  (unless (package-installed-p package)
    (package-install package))
  (load-library (format "init-mod-%s.el" package)))
#+END_SRC

Load package configuration file ~lisp/init-mod-XXX.el~ for each package ~XXX~ in ~other-package-list~, which have their own folder under ~lisp~.
#+BEGIN_SRC emacs-lisp
(dolist (package other-package-list)
  (add-to-list 'load-path (format "~/.emacs.d/lisp/%s" package))
  (load-library (format "init-mod-%s.el" package)))
#+END_SRC
